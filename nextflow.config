
manifest {
  author = 'Georgie Samaha'
  name = 'Nextflow_DSL2_template-nf'
  description = 'Workflow template created as a part of Aus BioCommons BYOD-CLI work'
  homePage = 'https://github.com/Sydney-Informatics-Hub/Nextflow_DSL2_template'

// Mandate a minimum version of nextflow required to run the pipeline
  nextflowVersion = '!>=20.07.1'
}

// resume pipeline from last successful process
  resume = true 

// Enable various profiles depending on compute infrastructure to be run on
// For more info: https://www.nextflow.io/docs/latest/config.html#config-profiles
// Example from https://github.com/marcodelapierre/trinity-nf/blob/master/nextflow.config
  profiles {
}

// Set default parameters
// Any parameters provided by the user with a -params-file or 
// with --param (i.e. --outDir) command-line arguments will 
// override the values defined here
  params.version  = '1.1'
  params.outDir   = './all_results'
  params.input   = './samples.txt'

  params { 
	help = false
  }
// Name containers to be used. For example:
  // container_samtools = "docker://quay.io/biocontainers/samtools:1.14--hb421002_0"

// Resource allocation for various processes
/// Here you can be provide CPU and memory for all or various processes
/// Defining it as a parameter means users can customise/override when running the command
  params.cpus = 1 // you'll need to include this parameter in your process. See process1.nf for example.

  // To specify resources for a specific process, use the following: 
  //withName: 'samtools' {
  //    cpus    = N 
  //    memory  = 8.GB 
  //}

// Fail a task if any command returns non-zero exit code
  shell = ['/bin/bash', '-euo', 'pipefail']

// Produce a workflow diagram  
  dag {
    enabled = true
    file = 'runInfo/dag.svg'
  }

  report {
    enabled = true
    file = 'runInfo/report.html'
  }

  timeline {
    enabled = true
    file = 'runInfo/timeline.html'
  }

  trace {
    enabled = true
    file = 'runInfo/trace.txt'
  }
